#!/usr/bin/env python

import sys, os, string, MySQLdb, getopt
sys.path.append('/usr/share/burnstation-client-2.0')
import LoadConfig
config=LoadConfig.LoadConfig()
db = MySQLdb.connect(host=config.DBhost, user=config.DBuser, passwd=config.DBpass, db=config.DB)

def usage():
    print ""
    print "Burnstation playlist recover tool"
    print ""
    print "Syntax: flagrecover [playlist ID]"
    print ""
    print "Playlist ID:"
    print ""
    print "Specify the playlist you would like to flag for recovery."
    print ""
    print ""
    print "Examples:"
    print ""
    print "  Search for a label which has the word 'Soul' in its name"
    print "# burnstation-flagrecover 123"
    print "  * Playlist with ID = 12 was marked for recovery!"
    print ""
    
def query(playlistID):
    global db
    
    if playlistID is not None:
	# clear recover flag from all playlists
	sql = "UPDATE netjuke_plists SET recover=0"
        cursor = db.cursor()
        result = "  * Cleaned! All playlists were unmarked for recovery!"
        cursor.execute(sql)
        
	# AND set recover flag to specified playlist
	sql = "UPDATE netjuke_plists SET recover=1 WHERE id='%s'" % playlistID
        cursor = db.cursor()
        result += "\n  * Playlist with ID = %s was marked for recovery!" % playlistID
        result += "\n"
        result += "\n  [!] If you want to CLEAR the recover flag invoke me again WITHOUT the playlist ID"
        cursor.execute(sql)
    else:
	# just clear recover flag from all playlists
        sql = "UPDATE netjuke_plists SET recover=0"
        cursor = db.cursor()
        result = "  * Cleaned! All playlists were unmarked for recovery!"
        result += "\n"
        result += "\n  [!] If you want to mark a playlist invoke me again with the ID"
        cursor.execute(sql)

    print result

def main(argv=None):
	playlistID = None
	
	if len(sys.argv) > 1:
            playlistID = sys.argv[1]

	query(playlistID)

if __name__ == "__main__":
    main()

